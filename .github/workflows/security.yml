name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: website/package-lock.json

      # Python security checks
      - name: Install Python security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety pycodestyle pylint
          
      - name: Run Bandit security scan
        run: bandit -r . -c pyproject.toml -f json -o bandit-results.json || true

      - name: Check Python dependencies
        run: safety check

      # JavaScript security checks
      - name: Install Node.js security tools
        working-directory: website
        run: |
          npm install -g npm@latest
          npm install

      - name: Run npm audit
        working-directory: website
        run: npm audit --audit-level=high

      # Secret scanning
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      # SAST scan
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: python, javascript
          queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      # Dependency scanning
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        if: ${{ secrets.SNYK_TOKEN != '' }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      # OWASP ZAP scan for web vulnerabilities
      - name: OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      # Upload scan results
      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: bandit-results.json

  blockchain-specific-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Custom blockchain security checks
      - name: Install blockchain security tools
        run: |
          pip install mythril slither-analyzer
          
      - name: Run smart contract security scan
        run: |
          # Scan for common blockchain vulnerabilities
          mythril analyze ./node/src/wallet.js --mode quick
          slither . --detect reentrancy,uninitialized-state,uninitialized-storage

  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
          
  security-headers:
    runs-on: ubuntu-latest
    steps:
      - name: Check Security Headers
        id: headercheck
        uses: juliangruber/http-security-headers-action@v1
        with:
          url: http://localhost:3000
          fail: false
