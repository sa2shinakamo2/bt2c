name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: website/package-lock.json

    - name: Install dependencies
      working-directory: website
      run: npm ci

    - name: Build website
      working-directory: website
      run: npm run build

    - name: Check for Netlify credentials
      id: check-netlify
      run: |
        if [ "${{ secrets.NETLIFY_AUTH_TOKEN }}" != "" ] && [ "${{ secrets.NETLIFY_SITE_ID }}" != "" ]; then
          echo "has_credentials=true" >> $GITHUB_OUTPUT
        else
          echo "has_credentials=false" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to Netlify
      if: steps.check-netlify.outputs.has_credentials == 'true'
      run: |
        npm install -g netlify-cli
        netlify deploy --prod --dir=website/dist --auth="${{ secrets.NETLIFY_AUTH_TOKEN }}" --site="${{ secrets.NETLIFY_SITE_ID }}"
      timeout-minutes: 1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Python tests
      run: |
        pytest tests/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: bt2c/blockchain:latest
        cache-from: type=registry,ref=bt2c/blockchain:buildcache
        cache-to: type=registry,ref=bt2c/blockchain:buildcache,mode=max
